    <br>
    <div class="row"><div class="col-sm-offset-1 col-sm-10">
		<div class="panel panel-info">
		  <!-- Default panel contents -->
		  <div class="panel-heading"><strong>Web应用软件开发，是一行行千头万绪地堆代码，还是在成熟高质的应用系统成品上增量开发?</strong> </div>
		  <div class="panel-body" style="line-height:25px;">
		    	开发一个web应用系统的基本功能原型，需要多大成本? <br>项目进度与质量控制,需要多大成本? <br>软件维护,需要多大成本? <br>客户需求沟通与变更,需要多大成本?<br>
		   	如果,买一个现成的呢?
		   	<div style="text-align:right"><h3 class="list-group-item-heading"><span class="label label-warning">加入“自由码农成长计划”，可免费获得本产品！</span></h3></div>
		  </div>
		 <div class="list-group">
		  	<div class="list-group-item ">
		    	<h2 class="list-group-item-heading"><span class="label label-success">即装、即用、可交付的成品Web应用系统  + 自动生成全套代码</span></h2>
		    	<p class="list-group-item-text plh">RainyArch是用于开发以数据库为中心、信息管理功能为主的web应用软件项目的技术框架，更同时包括可运行的完整项目常用功能模块（登录、菜单、系统管理、全局功能框架与组件等）和自动代码演示模块，即它是一个完整的WebApp系统。本网站的整个系统，就是您将得到的成品。更现成的是，
		    	您只需提供数据库详细设计文档，我就可以为您生成数据库以及实现所有模块CURD功能的代码文件（从UI到数据访问全套），帮您快速整合出您的整个项目的功能原型——不是静态页面原型，而是真正可交付的系统原型——让您的客户马上见到、用上实物，直观地探讨需求，降低沟通成本和需求变更成本。在此基础上开发无论是变更还是改进，都能快速进行。</p>
		  	</div>
		  	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">支持.Net和Java双平台开发</span></h3>
		    	<p class="list-group-item-text plh">RainyArch包括NetNgArch和JavaNgArch两个版本，分别支持在.Net和Java平台上开发，客户端部分均建构在Angular上（或可选JQuery）。
		    	服务器端NetNgArch采用C#4+NHibernate+Castle Windor IOC+ASP.Net MVC+spark/razor，JavaNgArch采用Java8+Hibernate+SpringIOC+Spring MVC+jsp.
		    	<br>两框架的内部结构一致，对上层编程的开发接口一致。您不必为不同平台的项目分别配备程序员了，在RainyArch上，每个程序员都能轻松成为双平台开发者。</p>
		   	</div>
		 	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">整合封装先进的通用技术框架</span></h3>
		    	<p class="list-group-item-text plh">Hibernate、IOC、Mvc、Angular这些先进的通用技术框架，能否在具体项目中被正确和充分使用，受限于开发人员的技术水平。而本框架由资深软件工程师、架构师根据多年项目经验设计开发，进一步包装了Hibernate+IOC+Mvc+Angular的编程接口，建立起web应用的技术域通用对象模型和简捷编程模式，包含多个共性技术问题的解决方案，为程序员提供了一个高质量功能强的编程框架和代码基础，保证了通用框架技术正确高效应用于软件开发，使项目易开发、易维护。</p>
		  	</div>
		  	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">服务器和客户端框架技术整合，两端mvc双向绑定</span></h3>
		    	<p class="list-group-item-text plh">目前通用的技术框架，大多只针对服务器或客户端二者之一，而本框架将两端技术整合一体，使编程模式更流畅优雅，无断层感，开发人员可将两端看作一体来开发，并轻松实现服务器与客户端的数据双向绑定、甚至是两端两个mvc结构的双向绑定。如，自动ajax功能，无需程序员写任何js脚本，就可在点击时自动提交请求并处理响应结果。</p>
		  	</div>
		 	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">通过简化编程接口、规范编程模式，有效实现项目的进度与质量控制</span></h3>
		    	<p class="list-group-item-text plh"> 开发人员在此框架上进行开发，其编程接口大大简化，编程模式固定且简单，开发人员不必处理技术性问题，不再陷入技术方法选择的迷惑与纠结中，而是将精力用于实现业务逻辑上。而框架本身对开发人员的编程模式起到了规范化标准化的统一和限定作用，使其不易出错，保证了项目开发水平的高度不受人员水平的制约。同时也灵活支持穿过框架使用原生技术的高级用法。</p>
		  	</div>
		  	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">共性问题最佳解决</span></h3>
		    	<p class="list-group-item-text plh"> 本框架包含了多个共性问题的解决方案，如自动映射、自动IOC、自动字典、安全控制，表格排序与分页、数据库错误处理、本地化、面包屑导航的刷新返回等等，均内置在框架中实现，多数情况下一行代码都不用程序员写。力图将程序员要写的代码减到最少。</p>
		  	</div>
		 	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">引领程序员语言技术升级</span></h3>
		    	<p class="list-group-item-text plh">本框架跟进技术更新，不仅利用最先进的通用框架，还充分利用编程语言（C#4.0/java8）新特性，如泛型，linq，lambda表达式，匿名类，标记，属性声明、扩展方法等等，引领程序员语言技术升级，代码更为简洁强大。还有自动化开发工具直接生成全部常规代码，无需修改即可编译运行。程序员在自动生成的规范化高质量代码上再做定制编程，技术水平加速提高。</p>
		  	</div>
		  	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">最贴近程序员的框架，以不变应万变</span></h3>
		    	<p class="list-group-item-text plh"> 软件开发涉及的多种框架技术，不断会进行版本升级，以及新技术不断进入，往往使得软件企业为程序员的学习培训和适应变化付出成本。本框架整合封装各种技术，对应用开发程序员提供简单稳定的编程接口。将多种技术的升级变化最大限度地控制在框架内部，不再影响程序员。</p>
		  	</div>
		  	<div class="list-group-item ">
		    	<h3 class="list-group-item-heading"><span class="label label-primary">产品成熟，历经检验</span></h3>
		    	<p class="list-group-item-text plh">本框架作者多年从事软件开发和架构设计。对多种语言技术都进行过架构设计，并不断升级，所设计的多个框架、多个版本均经实际项目应用得到检验和完善。</p>
		  	</div>
		</div>
		</div></div></div>